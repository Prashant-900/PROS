apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: frontend:v1
          command: ["npm", "start"]
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      serviceAccountName: backend-sa
      containers:
        - name: backend
          image: backend:v1
          command: ["node", "server.js"]
          ports:
            - containerPort: 8080
          env:
            - name: MONGODB_URI
              value: "mongodb://host.docker.internal:27017/reple"
            - name: BUCKET_NAME
              value: "my-bucket"
            - name: BUCKET_PASS
              value: "minioadmin"
            - name: BUCKET_USER
              value: "minioadmin"
            - name: BUCKET_HOST
              value: "minio-service"
            - name: BUCKET_PORT
              value: "9000"
            - name: SERVICE_PORT
              value: "8080"
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-manager-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pod-manager
  template:
    metadata:
      labels:
        app: pod-manager
    spec:
      serviceAccountName: pod-manager-sa
      containers:
        - name: pod-manager
          image: pod-manager:v1
          command: ["node", "server.js"]
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"

